

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Jan 18 08:29:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F648A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  008C                     	;# 
    48  008E                     	;# 
    49  0092                     	;# 
    50  0098                     	;# 
    51  0099                     	;# 
    52  009A                     	;# 
    53  009B                     	;# 
    54  009C                     	;# 
    55  009D                     	;# 
    56  009F                     	;# 
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  008C                     	;# 
    85  008E                     	;# 
    86  0092                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009F                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  008C                     	;# 
   122  008E                     	;# 
   123  0092                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009F                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  008C                     	;# 
   159  008E                     	;# 
   160  0092                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009F                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  008C                     	;# 
   196  008E                     	;# 
   197  0092                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009F                     	;# 
   205  0015                     _CCPR1L	set	21
   206  001F                     _CMCON	set	31
   207  0005                     _PORTA	set	5
   208  0006                     _PORTB	set	6
   209  001A                     _RCREG	set	26
   210  0018                     _RCSTA	set	24
   211  0012                     _T2CON	set	18
   212  0019                     _TXREG	set	25
   213  00B8                     _CCP1M0	set	184
   214  00B9                     _CCP1M1	set	185
   215  00BA                     _CCP1M2	set	186
   216  00BB                     _CCP1M3	set	187
   217  00BD                     _CCP1X	set	189
   218  00BC                     _CCP1Y	set	188
   219  005F                     _GIE	set	95
   220  005E                     _PEIE	set	94
   221  0030                     _RB0	set	48
   222  0035                     _RB5	set	53
   223  0065                     _RCIF	set	101
   224  0064                     _TXIF	set	100
   225  008E                     _PCON	set	142
   226  0092                     _PR2	set	146
   227  0099                     _SPBRG	set	153
   228  0085                     _TRISA	set	133
   229  0086                     _TRISB	set	134
   230  0098                     _TXSTA	set	152
   231  009F                     _VRCON	set	159
   232  0465                     _RCIE	set	1125
   233  0430                     _TRISB0	set	1072
   234  0433                     _TRISB3	set	1075
   235  0464                     _TXIE	set	1124
   236                           
   237                           	psect	strings
   238  0100                     __pstrings:	
   239  0100                     stringtab:	
   240  0100                     __stringtab:	
   241  0100                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  0100                     stringdir:	
   245  0100  3001               	movlw	high stringdir
   246  0101  008A               	movwf	10
   247  0102  0804               	movf	4,w
   248  0103  0A84               	incf	4,f
   249  0104  0782               	addwf	2,f
   250  0105                     __stringbase:	
   251  0105  3400               	retlw	0
   252  0106                     __end_of__stringtab:	
   253  0106                     __stringdata:	
   254  0106                     STR_4:	
   255  0106  3444               	retlw	68	;'D'
   256  0107  3465               	retlw	101	;'e'
   257  0108  3461               	retlw	97	;'a'
   258  0109  3463               	retlw	99	;'c'
   259  010A  3463               	retlw	99	;'c'
   260  010B  3465               	retlw	101	;'e'
   261  010C  346C               	retlw	108	;'l'
   262  010D  3461               	retlw	97	;'a'
   263  010E  3472               	retlw	114	;'r'
   264  010F  3461               	retlw	97	;'a'
   265  0110  3474               	retlw	116	;'t'
   266  0111  3465               	retlw	101	;'e'
   267  0112  340A               	retlw	10
   268  0113  3400               	retlw	0
   269  0114                     STR_3:	
   270  0114  3441               	retlw	65	;'A'
   271  0115  3463               	retlw	99	;'c'
   272  0116  3463               	retlw	99	;'c'
   273  0117  3465               	retlw	101	;'e'
   274  0118  346C               	retlw	108	;'l'
   275  0119  3461               	retlw	97	;'a'
   276  011A  3472               	retlw	114	;'r'
   277  011B  3461               	retlw	97	;'a'
   278  011C  3474               	retlw	116	;'t'
   279  011D  3465               	retlw	101	;'e'
   280  011E  340A               	retlw	10
   281  011F  3400               	retlw	0
   282  0120                     STR_2:	
   283  0120  3442               	retlw	66	;'B'
   284  0121  3461               	retlw	97	;'a'
   285  0122  3463               	retlw	99	;'c'
   286  0123  346B               	retlw	107	;'k'
   287  0124  3477               	retlw	119	;'w'
   288  0125  3461               	retlw	97	;'a'
   289  0126  3472               	retlw	114	;'r'
   290  0127  3464               	retlw	100	;'d'
   291  0128  340A               	retlw	10
   292  0129  3400               	retlw	0
   293  012A                     STR_1:	
   294  012A  3446               	retlw	70	;'F'
   295  012B  346F               	retlw	111	;'o'
   296  012C  3472               	retlw	114	;'r'
   297  012D  3477               	retlw	119	;'w'
   298  012E  3461               	retlw	97	;'a'
   299  012F  3472               	retlw	114	;'r'
   300  0130  3464               	retlw	100	;'d'
   301  0131  340A               	retlw	10
   302  0132  3400               	retlw	0
   303  0133                     STR_5:	
   304  0133  3443               	retlw	67	;'C'
   305  0134  3465               	retlw	101	;'e'
   306  0135  3461               	retlw	97	;'a'
   307  0136  3473               	retlw	115	;'s'
   308  0137  3465               	retlw	101	;'e'
   309  0138  340A               	retlw	10
   310  0139  3400               	retlw	0
   311  013A                     __end_of__stringdata:	
   312                           
   313                           ; #config settings
   314  0000                     
   315                           	psect	cinit
   316  0013                     start_initialization:	
   317  0013                     __initialization:	
   318                           
   319                           ; Clear objects allocated to COMMON
   320  0013  01F0               	clrf	__pbssCOMMON& (0+127)
   321  0014  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   322  0015  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   323  0016  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   324  0017  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   325                           
   326                           ; Clear objects allocated to BANK0
   327  0018  1383               	bcf	3,7	;select IRP bank0
   328  0019  3020               	movlw	low __pbssBANK0
   329  001A  0084               	movwf	4
   330  001B  3039               	movlw	low (__pbssBANK0+25)
   331  001C  118A  2205         	fcall	clear_ram0
   332  001E                     end_of_initialization:	
   333                           ;End of C runtime variable initialization code
   334                           
   335  001E                     __end_of__initialization:	
   336  001E  0183               	clrf	3
   337  001F  118A  29F5         	ljmp	_main	;jump to C main() function
   338                           
   339                           	psect	bssCOMMON
   340  0070                     __pbssCOMMON:	
   341  0070                     _TxReq:	
   342  0070                     	ds	2
   343  0072                     _i:	
   344  0072                     	ds	2
   345  0074                     _cnt:	
   346  0074                     	ds	1
   347                           
   348                           	psect	bssBANK0
   349  0020                     __pbssBANK0:	
   350  0020                     _RxInd:	
   351  0020                     	ds	2
   352  0022                     _sendDataLen:	
   353  0022                     	ds	2
   354  0024                     _RCV_Buff:	
   355  0024                     	ds	1
   356  0025                     _sendDataBuff:	
   357  0025                     	ds	20
   358                           
   359                           	psect	clrtext
   360  0205                     clear_ram0:	
   361                           ;	Called with FSR containing the base address, and
   362                           ;	W with the last address+1
   363                           
   364  0205  0064               	clrwdt	;clear the watchdog before getting into this loop
   365  0206                     clrloop0:	
   366  0206  0180               	clrf	0	;clear RAM location pointed to by FSR
   367  0207  0A84               	incf	4,f	;increment pointer
   368  0208  0604               	xorwf	4,w	;XOR with final address
   369  0209  1903               	btfsc	3,2	;have we reached the end yet?
   370  020A  3400               	retlw	0	;all done for this memory range, return
   371  020B  0604               	xorwf	4,w	;XOR again to restore value
   372  020C  2A06               	goto	clrloop0	;do the next byte
   373                           
   374                           	psect	cstackCOMMON
   375  0075                     __pcstackCOMMON:	
   376  0075                     ?_receive_main:	
   377  0075                     ?_device_init:	
   378                           ; 0 bytes @ 0x0
   379                           
   380  0075                     ?_InterReceiver:	
   381                           ; 0 bytes @ 0x0
   382                           
   383  0075                     ??_InterReceiver:	
   384                           ; 0 bytes @ 0x0
   385                           
   386  0075                     ?_main:	
   387                           ; 0 bytes @ 0x0
   388                           
   389                           
   390                           ; 2 bytes @ 0x0
   391  0075                     	ds	5
   392                           
   393                           	psect	cstackBANK0
   394  0039                     __pcstackBANK0:	
   395  0039                     ??_device_init:	
   396  0039                     ?_memcpy:	
   397                           ; 0 bytes @ 0x0
   398                           
   399  0039                     ?_strlen:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0039                     memcpy@s1:	
   403                           ; 2 bytes @ 0x0
   404                           
   405                           
   406                           ; 1 bytes @ 0x0
   407  0039                     	ds	1
   408  003A                     memcpy@n:	
   409                           
   410                           ; 2 bytes @ 0x1
   411  003A                     	ds	1
   412  003B                     ??_strlen:	
   413                           
   414                           ; 0 bytes @ 0x2
   415  003B                     	ds	1
   416  003C                     ??_memcpy:	
   417                           
   418                           ; 0 bytes @ 0x3
   419  003C                     	ds	1
   420  003D                     memcpy@d1:	
   421                           
   422                           ; 1 bytes @ 0x4
   423  003D                     	ds	1
   424  003E                     memcpy@d:	
   425                           
   426                           ; 1 bytes @ 0x5
   427  003E                     	ds	1
   428  003F                     memcpy@s:	
   429  003F                     strlen@s:	
   430                           ; 1 bytes @ 0x6
   431                           
   432                           
   433                           ; 1 bytes @ 0x6
   434  003F                     	ds	1
   435  0040                     strlen@cp:	
   436                           
   437                           ; 1 bytes @ 0x7
   438  0040                     	ds	1
   439  0041                     ?_sendDataHandler:	
   440  0041                     sendDataHandler@msg:	
   441                           ; 0 bytes @ 0x8
   442                           
   443                           
   444                           ; 1 bytes @ 0x8
   445  0041                     	ds	1
   446  0042                     ??_sendDataHandler:	
   447                           
   448                           ; 0 bytes @ 0x9
   449  0042                     	ds	1
   450  0043                     sendDataHandler@SendDataBytes:	
   451                           
   452                           ; 2 bytes @ 0xA
   453  0043                     	ds	2
   454  0045                     sendDataHandler@ptr:	
   455                           
   456                           ; 1 bytes @ 0xC
   457  0045                     	ds	1
   458  0046                     ??_receive_main:	
   459                           
   460                           ; 0 bytes @ 0xD
   461  0046                     	ds	3
   462  0049                     receive_main@forward:	
   463                           
   464                           ; 1 bytes @ 0x10
   465  0049                     	ds	1
   466  004A                     receive_main@backward:	
   467                           
   468                           ; 1 bytes @ 0x11
   469  004A                     	ds	1
   470  004B                     receive_main@up:	
   471                           
   472                           ; 1 bytes @ 0x12
   473  004B                     	ds	1
   474  004C                     receive_main@down:	
   475                           
   476                           ; 1 bytes @ 0x13
   477  004C                     	ds	1
   478  004D                     receive_main@stop:	
   479                           
   480                           ; 1 bytes @ 0x14
   481  004D                     	ds	1
   482  004E                     ??_main:	
   483                           
   484                           	psect	maintext
   485  01F5                     __pmaintext:	
   486                           ; 0 bytes @ 0x15
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 27 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  2   14[COMMON] int 
   499 ;; Registers used:
   500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 17F/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   506 ;;      Params:         0       0       0       0
   507 ;;      Locals:         0       0       0       0
   508 ;;      Temps:          0       0       0       0
   509 ;;      Totals:         0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called:    5
   512 ;; This function calls:
   513 ;;		_receive_main
   514 ;; This function is called by:
   515 ;;		Startup code after reset
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _main
   521  01F5                     _main:	
   522                           
   523                           ;main.c: 29: PCON = 0b00001000;
   524                           
   525                           ;incstack = 0
   526                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   527  01F5  3008               	movlw	8
   528  01F6  1683               	bsf	3,5	;RP0=1, select bank1
   529  01F7  1303               	bcf	3,6	;RP1=0, select bank1
   530  01F8  008E               	movwf	14	;volatile
   531                           
   532                           ;main.c: 30: PORTA = 0b00000000;
   533  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   534  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   535  01FB  0185               	clrf	5	;volatile
   536                           
   537                           ;main.c: 31: CMCON = 0b00000111;
   538  01FC  3007               	movlw	7
   539  01FD  009F               	movwf	31	;volatile
   540                           
   541                           ;main.c: 32: TRISA = 0b00000000;
   542  01FE  1683               	bsf	3,5	;RP0=1, select bank1
   543  01FF  1303               	bcf	3,6	;RP1=0, select bank1
   544  0200  0185               	clrf	5	;volatile
   545                           
   546                           ;main.c: 34: receive_main();
   547  0201  118A  2021         	fcall	_receive_main
   548  0203  118A  2811         	ljmp	start
   549  0205                     __end_of_main:	
   550                           
   551                           	psect	text1
   552  0021                     __ptext1:	
   553 ;; *************** function _receive_main *****************
   554 ;; Defined at:
   555 ;;		line 43 in file "usart.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  stop            1   20[BANK0 ] PTR const unsigned char 
   560 ;;		 -> STR_5(7), 
   561 ;;  down            1   19[BANK0 ] PTR const unsigned char 
   562 ;;		 -> STR_4(14), 
   563 ;;  up              1   18[BANK0 ] PTR const unsigned char 
   564 ;;		 -> STR_3(12), 
   565 ;;  backward        1   17[BANK0 ] PTR const unsigned char 
   566 ;;		 -> STR_2(10), 
   567 ;;  forward         1   16[BANK0 ] PTR const unsigned char 
   568 ;;		 -> STR_1(9), 
   569 ;; Return value:  Size  Location     Type
   570 ;;		None               void
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   578 ;;      Params:         0       0       0       0
   579 ;;      Locals:         0       5       0       0
   580 ;;      Temps:          0       3       0       0
   581 ;;      Totals:         0       8       0       0
   582 ;;Total ram usage:        8 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    4
   585 ;; This function calls:
   586 ;;		_device_init
   587 ;;		_sendDataHandler
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _receive_main
   595  0021                     _receive_main:	
   596                           
   597                           ;usart.c: 46: device_init();
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _receive_main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   601  0021  118A  213A  118A   	fcall	_device_init
   602                           
   603                           ;usart.c: 48: const char *forward = "Forward\n";
   604  0024  3025               	movlw	(STR_1-__stringbase)& (0+255)
   605  0025  1283               	bcf	3,5	;RP0=0, select bank0
   606  0026  1303               	bcf	3,6	;RP1=0, select bank0
   607  0027  00C6               	movwf	??_receive_main
   608  0028  0846               	movf	??_receive_main,w
   609  0029  00C9               	movwf	receive_main@forward
   610                           
   611                           ;usart.c: 49: const char *backward = "Backward\n";
   612  002A  301B               	movlw	(STR_2-__stringbase)& (0+255)
   613  002B  00C6               	movwf	??_receive_main
   614  002C  0846               	movf	??_receive_main,w
   615  002D  00CA               	movwf	receive_main@backward
   616                           
   617                           ;usart.c: 50: const char *up = "Accelarate\n";
   618  002E  300F               	movlw	(STR_3-__stringbase)& (0+255)
   619  002F  00C6               	movwf	??_receive_main
   620  0030  0846               	movf	??_receive_main,w
   621  0031  00CB               	movwf	receive_main@up
   622                           
   623                           ;usart.c: 51: const char *down = "Deaccelarate\n";
   624  0032  3001               	movlw	(STR_4-__stringbase)& (0+255)
   625  0033  00C6               	movwf	??_receive_main
   626  0034  0846               	movf	??_receive_main,w
   627  0035  00CC               	movwf	receive_main@down
   628                           
   629                           ;usart.c: 52: const char *stop = "Cease\n";
   630  0036  302E               	movlw	(STR_5-__stringbase)& (0+255)
   631  0037  00C6               	movwf	??_receive_main
   632  0038  0846               	movf	??_receive_main,w
   633  0039  00CD               	movwf	receive_main@stop
   634                           
   635                           ;usart.c: 64: switch (RCV_Buff) {
   636  003A  289B               	goto	l1048
   637  003B                     l1052:	
   638                           ;usart.c: 65: case 'F':
   639                           
   640                           
   641                           ;usart.c: 66: sendDataHandler(sendDataBuff, forward);
   642  003B  0849               	movf	receive_main@forward,w
   643  003C  00C6               	movwf	??_receive_main
   644  003D  0846               	movf	??_receive_main,w
   645  003E  00C1               	movwf	sendDataHandler@msg
   646  003F  3025               	movlw	_sendDataBuff& (0+255)
   647  0040  118A  21A0  118A   	fcall	_sendDataHandler
   648                           
   649                           ;usart.c: 67: TXIE = 1;
   650  0043  1683               	bsf	3,5	;RP0=1, select bank1
   651  0044  1303               	bcf	3,6	;RP1=0, select bank1
   652  0045  160C               	bsf	12,4	;volatile
   653                           
   654                           ;usart.c: 68: RB0 = 0;
   655  0046  1283               	bcf	3,5	;RP0=0, select bank0
   656  0047  1303               	bcf	3,6	;RP1=0, select bank0
   657  0048  1006               	bcf	6,0	;volatile
   658                           
   659                           ;usart.c: 69: RB5 = 1;
   660  0049  1686               	bsf	6,5	;volatile
   661                           
   662                           ;usart.c: 70: break;
   663  004A  289B               	goto	l1048
   664  004B                     l1060:	
   665                           ;usart.c: 71: case 'B':
   666                           
   667                           
   668                           ;usart.c: 72: sendDataHandler(sendDataBuff, backward);
   669  004B  084A               	movf	receive_main@backward,w
   670  004C  00C6               	movwf	??_receive_main
   671  004D  0846               	movf	??_receive_main,w
   672  004E  00C1               	movwf	sendDataHandler@msg
   673  004F  3025               	movlw	_sendDataBuff& (0+255)
   674  0050  118A  21A0  118A   	fcall	_sendDataHandler
   675                           
   676                           ;usart.c: 73: TXIE = 1;
   677  0053  1683               	bsf	3,5	;RP0=1, select bank1
   678  0054  1303               	bcf	3,6	;RP1=0, select bank1
   679  0055  160C               	bsf	12,4	;volatile
   680                           
   681                           ;usart.c: 74: RB0 = 1;
   682  0056  1283               	bcf	3,5	;RP0=0, select bank0
   683  0057  1303               	bcf	3,6	;RP1=0, select bank0
   684  0058  1406               	bsf	6,0	;volatile
   685  0059  289A               	goto	l1092
   686  005A                     l1068:	
   687                           ;usart.c: 77: case 'A':
   688                           
   689                           ;usart.c: 76: break;
   690                           
   691                           ;usart.c: 75: RB5 = 0;
   692                           
   693                           
   694                           ;usart.c: 78: sendDataHandler(sendDataBuff, up);
   695  005A  084B               	movf	receive_main@up,w
   696  005B  00C6               	movwf	??_receive_main
   697  005C  0846               	movf	??_receive_main,w
   698  005D  00C1               	movwf	sendDataHandler@msg
   699  005E  3025               	movlw	_sendDataBuff& (0+255)
   700  005F  118A  21A0  118A   	fcall	_sendDataHandler
   701                           
   702                           ;usart.c: 79: TXIE = 1;
   703  0062  1683               	bsf	3,5	;RP0=1, select bank1
   704  0063  1303               	bcf	3,6	;RP1=0, select bank1
   705  0064  160C               	bsf	12,4	;volatile
   706                           
   707                           ;usart.c: 80: CCPR1L += 2;
   708  0065  3002               	movlw	2
   709  0066  1283               	bcf	3,5	;RP0=0, select bank0
   710  0067  1303               	bcf	3,6	;RP1=0, select bank0
   711  0068  00C6               	movwf	??_receive_main
   712  0069  0846               	movf	??_receive_main,w
   713  006A  0795               	addwf	21,f	;volatile
   714                           
   715                           ;usart.c: 81: break;
   716  006B  289B               	goto	l1048
   717  006C                     l1074:	
   718                           ;usart.c: 82: case 'D':
   719                           
   720                           
   721                           ;usart.c: 83: sendDataHandler(sendDataBuff, down);
   722  006C  084C               	movf	receive_main@down,w
   723  006D  00C6               	movwf	??_receive_main
   724  006E  0846               	movf	??_receive_main,w
   725  006F  00C1               	movwf	sendDataHandler@msg
   726  0070  3025               	movlw	_sendDataBuff& (0+255)
   727  0071  118A  21A0  118A   	fcall	_sendDataHandler
   728                           
   729                           ;usart.c: 84: TXIE = 1;
   730  0074  1683               	bsf	3,5	;RP0=1, select bank1
   731  0075  1303               	bcf	3,6	;RP1=0, select bank1
   732  0076  160C               	bsf	12,4	;volatile
   733                           
   734                           ;usart.c: 85: CCPR1L -= 2;
   735  0077  3002               	movlw	2
   736  0078  1283               	bcf	3,5	;RP0=0, select bank0
   737  0079  1303               	bcf	3,6	;RP1=0, select bank0
   738  007A  0295               	subwf	21,f	;volatile
   739                           
   740                           ;usart.c: 86: break;
   741  007B  289B               	goto	l1048
   742  007C                     l1080:	
   743                           ;usart.c: 87: case 'S':
   744                           
   745                           
   746                           ;usart.c: 88: sendDataHandler(sendDataBuff, stop);
   747  007C  084D               	movf	receive_main@stop,w
   748  007D  00C6               	movwf	??_receive_main
   749  007E  0846               	movf	??_receive_main,w
   750  007F  00C1               	movwf	sendDataHandler@msg
   751  0080  3025               	movlw	_sendDataBuff& (0+255)
   752  0081  118A  21A0  118A   	fcall	_sendDataHandler
   753                           
   754                           ;usart.c: 89: TXIE = 1;
   755  0084  1683               	bsf	3,5	;RP0=1, select bank1
   756  0085  1303               	bcf	3,6	;RP1=0, select bank1
   757  0086  160C               	bsf	12,4	;volatile
   758                           
   759                           ;usart.c: 90: RB0 = 1;
   760  0087  1283               	bcf	3,5	;RP0=0, select bank0
   761  0088  1303               	bcf	3,6	;RP1=0, select bank0
   762  0089  1406               	bsf	6,0	;volatile
   763                           
   764                           ;usart.c: 91: RB5 = 1;
   765  008A  1686               	bsf	6,5	;volatile
   766                           
   767                           ;usart.c: 92: _delay((unsigned long)((300)*(4000000/4000.0)));
   768  008B  3002               	movlw	2
   769  008C  00C8               	movwf	??_receive_main+2
   770  008D  3086               	movlw	134
   771  008E  00C7               	movwf	??_receive_main+1
   772  008F  3099               	movlw	153
   773  0090  00C6               	movwf	??_receive_main
   774  0091                     u237:	
   775  0091  0BC6               	decfsz	??_receive_main,f
   776  0092  2891               	goto	u237
   777  0093  0BC7               	decfsz	??_receive_main+1,f
   778  0094  2891               	goto	u237
   779  0095  0BC8               	decfsz	??_receive_main+2,f
   780  0096  2891               	goto	u237
   781                           
   782                           ;usart.c: 93: RB0 = 0;
   783  0097  1283               	bcf	3,5	;RP0=0, select bank0
   784  0098  1303               	bcf	3,6	;RP1=0, select bank0
   785  0099  1006               	bcf	6,0	;volatile
   786  009A                     l1092:	
   787                           
   788                           ;usart.c: 94: RB5 = 0;
   789  009A  1286               	bcf	6,5	;volatile
   790  009B                     l1048:	
   791                           ;usart.c: 57: while(1) {
   792                           
   793                           ;usart.c: 103: }
   794                           
   795                           ;usart.c: 95: break;
   796                           
   797                           
   798                           ;usart.c: 62: if (RxInd == 1) {
   799  009B  3001               	movlw	1
   800  009C  0620               	xorwf	_RxInd,w	;volatile
   801  009D  0421               	iorwf	_RxInd+1,w	;volatile
   802  009E  1D03               	skipz
   803  009F  289B               	goto	l1048
   804                           
   805                           ;usart.c: 63: RxInd = 0 ;
   806  00A0  01A0               	clrf	_RxInd	;volatile
   807  00A1  01A1               	clrf	_RxInd+1	;volatile
   808  00A2  0824               	movf	_RCV_Buff,w	;volatile
   809                           
   810                           ; Switch size 1, requested type "space"
   811                           ; Number of cases is 5, Range of values is 65 to 83
   812                           ; switch strategies available:
   813                           ; Name         Instructions Cycles
   814                           ; simple_byte           16     9 (average)
   815                           ; direct_byte           48    10 (fixed)
   816                           ; jumptable            263     9 (fixed)
   817                           ;	Chosen strategy is simple_byte
   818  00A3  3A41               	xorlw	65	; case 65
   819  00A4  1903               	skipnz
   820  00A5  285A               	goto	l1068
   821  00A6  3A03               	xorlw	3	; case 66
   822  00A7  1903               	skipnz
   823  00A8  284B               	goto	l1060
   824  00A9  3A06               	xorlw	6	; case 68
   825  00AA  1903               	skipnz
   826  00AB  286C               	goto	l1074
   827  00AC  3A02               	xorlw	2	; case 70
   828  00AD  1903               	skipnz
   829  00AE  283B               	goto	l1052
   830  00AF  3A15               	xorlw	21	; case 83
   831  00B0  1903               	skipnz
   832  00B1  287C               	goto	l1080
   833  00B2  289B               	goto	l1048
   834  00B3  289B               	goto	l1048
   835  00B4                     __end_of_receive_main:	
   836                           
   837                           	psect	text2
   838  01A0                     __ptext2:	
   839 ;; *************** function _sendDataHandler *****************
   840 ;; Defined at:
   841 ;;		line 109 in file "usart.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  ptr             1    wreg     PTR volatile unsigned ch
   844 ;;		 -> sendDataBuff(20), 
   845 ;;  msg             1    8[BANK0 ] PTR const unsigned char 
   846 ;;		 -> STR_5(7), STR_4(14), STR_3(12), STR_2(10), 
   847 ;;		 -> STR_1(9), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  ptr             1   12[BANK0 ] PTR volatile unsigned ch
   850 ;;		 -> sendDataBuff(20), 
   851 ;;  SendDataByte    2   10[BANK0 ] unsigned int 
   852 ;; Return value:  Size  Location     Type
   853 ;;		None               void
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   861 ;;      Params:         0       1       0       0
   862 ;;      Locals:         0       3       0       0
   863 ;;      Temps:          0       1       0       0
   864 ;;      Totals:         0       5       0       0
   865 ;;Total ram usage:        5 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    3
   868 ;; This function calls:
   869 ;;		_memcpy
   870 ;;		_strlen
   871 ;; This function is called by:
   872 ;;		_receive_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _sendDataHandler
   878  01A0                     _sendDataHandler:	
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _sendDataHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   882                           ;sendDataHandler@ptr stored from wreg
   883  01A0  1283               	bcf	3,5	;RP0=0, select bank0
   884  01A1  1303               	bcf	3,6	;RP1=0, select bank0
   885  01A2  00C5               	movwf	sendDataHandler@ptr
   886                           
   887                           ;usart.c: 110: if (sendDataLen == 0) {
   888  01A3  0823               	movf	_sendDataLen+1,w	;volatile
   889  01A4  0422               	iorwf	_sendDataLen,w	;volatile
   890  01A5  1D03               	skipz
   891  01A6  0008               	return
   892                           
   893                           ;usart.c: 111: (GIE = 0);
   894  01A7  138B               	bcf	11,7	;volatile
   895                           
   896                           ;usart.c: 112: size_t SendDataBytes = strlen(msg);
   897  01A8  0841               	movf	sendDataHandler@msg,w
   898  01A9  118A  21CB  118A   	fcall	_strlen
   899  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   900  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   901  01AE  083A               	movf	?_strlen+1,w
   902  01AF  01C4               	clrf	sendDataHandler@SendDataBytes+1
   903  01B0  07C4               	addwf	sendDataHandler@SendDataBytes+1,f
   904  01B1  0839               	movf	?_strlen,w
   905  01B2  01C3               	clrf	sendDataHandler@SendDataBytes
   906  01B3  07C3               	addwf	sendDataHandler@SendDataBytes,f
   907                           
   908                           ;usart.c: 113: memcpy(ptr, msg, SendDataBytes);
   909  01B4  0841               	movf	sendDataHandler@msg,w
   910  01B5  00C2               	movwf	??_sendDataHandler
   911  01B6  0842               	movf	??_sendDataHandler,w
   912  01B7  00B9               	movwf	memcpy@s1
   913  01B8  0844               	movf	sendDataHandler@SendDataBytes+1,w
   914  01B9  01BB               	clrf	memcpy@n+1
   915  01BA  07BB               	addwf	memcpy@n+1,f
   916  01BB  0843               	movf	sendDataHandler@SendDataBytes,w
   917  01BC  01BA               	clrf	memcpy@n
   918  01BD  07BA               	addwf	memcpy@n,f
   919  01BE  0845               	movf	sendDataHandler@ptr,w
   920  01BF  118A  2173         	fcall	_memcpy
   921                           
   922                           ;usart.c: 114: sendDataLen = SendDataBytes;
   923  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   924  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   925  01C3  0844               	movf	sendDataHandler@SendDataBytes+1,w
   926  01C4  01A3               	clrf	_sendDataLen+1	;volatile
   927  01C5  07A3               	addwf	_sendDataLen+1,f	;volatile
   928  01C6  0843               	movf	sendDataHandler@SendDataBytes,w
   929  01C7  01A2               	clrf	_sendDataLen	;volatile
   930  01C8  07A2               	addwf	_sendDataLen,f	;volatile
   931                           
   932                           ;usart.c: 115: (GIE = 1);
   933  01C9  178B               	bsf	11,7	;volatile
   934  01CA  0008               	return
   935  01CB                     __end_of_sendDataHandler:	
   936                           
   937                           	psect	text3
   938  01CB                     __ptext3:	
   939 ;; *************** function _strlen *****************
   940 ;; Defined at:
   941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\strlen.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  s               1    wreg     PTR const unsigned char 
   944 ;;		 -> STR_5(7), STR_4(14), STR_3(12), STR_2(10), 
   945 ;;		 -> STR_1(9), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  s               1    6[BANK0 ] PTR const unsigned char 
   948 ;;		 -> STR_5(7), STR_4(14), STR_3(12), STR_2(10), 
   949 ;;		 -> STR_1(9), 
   950 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
   951 ;;		 -> STR_5(7), STR_4(14), STR_3(12), STR_2(10), 
   952 ;;		 -> STR_1(9), 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2    0[BANK0 ] unsigned int 
   955 ;; Registers used:
   956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   962 ;;      Params:         0       2       0       0
   963 ;;      Locals:         0       2       0       0
   964 ;;      Temps:          0       4       0       0
   965 ;;      Totals:         0       8       0       0
   966 ;;Total ram usage:        8 bytes
   967 ;; Hardware stack levels used:    2
   968 ;; Hardware stack levels required when called:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_sendDataHandler
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _strlen
   978  01CB                     _strlen:	
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
   982                           ;strlen@s stored from wreg
   983  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   984  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   985  01CD  00BF               	movwf	strlen@s
   986  01CE  083F               	movf	strlen@s,w
   987  01CF  00BB               	movwf	??_strlen
   988  01D0  083B               	movf	??_strlen,w
   989  01D1  00C0               	movwf	strlen@cp
   990  01D2                     l964:	
   991  01D2  0840               	movf	strlen@cp,w
   992  01D3  0084               	movwf	4
   993  01D4  118A  2100  118A   	fcall	stringdir
   994  01D7  3800               	iorlw	0
   995  01D8  1903               	btfsc	3,2
   996  01D9  29DF               	goto	l966
   997  01DA  3001               	movlw	1
   998  01DB  00BB               	movwf	??_strlen
   999  01DC  083B               	movf	??_strlen,w
  1000  01DD  07C0               	addwf	strlen@cp,f
  1001  01DE  29D2               	goto	l964
  1002  01DF                     l966:	
  1003  01DF  083F               	movf	strlen@s,w
  1004  01E0  00BB               	movwf	??_strlen
  1005  01E1  3080               	movlw	128
  1006  01E2  00BC               	movwf	??_strlen+1
  1007  01E3  09BB               	comf	??_strlen,f
  1008  01E4  09BC               	comf	??_strlen+1,f
  1009  01E5  0ABB               	incf	??_strlen,f
  1010  01E6  1903               	skipnz
  1011  01E7  0ABC               	incf	??_strlen+1,f
  1012  01E8  0840               	movf	strlen@cp,w
  1013  01E9  00BD               	movwf	??_strlen+2
  1014  01EA  3080               	movlw	128
  1015  01EB  00BE               	movwf	??_strlen+3
  1016  01EC  083B               	movf	??_strlen,w
  1017  01ED  073D               	addwf	??_strlen+2,w
  1018  01EE  00B9               	movwf	?_strlen
  1019  01EF  083C               	movf	??_strlen+1,w
  1020  01F0  1803               	skipnc
  1021  01F1  0A3C               	incf	??_strlen+1,w
  1022  01F2  073E               	addwf	??_strlen+3,w
  1023  01F3  00BA               	movwf	?_strlen+1
  1024  01F4  0008               	return
  1025  01F5                     __end_of_strlen:	
  1026                           
  1027                           	psect	text4
  1028  0173                     __ptext4:	
  1029 ;; *************** function _memcpy *****************
  1030 ;; Defined at:
  1031 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\memcpy.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  d1              1    wreg     PTR void 
  1034 ;;		 -> sendDataBuff(20), 
  1035 ;;  s1              1    0[BANK0 ] PTR const void 
  1036 ;;		 -> STR_5(7), STR_4(14), STR_3(12), STR_2(10), 
  1037 ;;		 -> STR_1(9), 
  1038 ;;  n               2    1[BANK0 ] unsigned int 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  d1              1    4[BANK0 ] PTR void 
  1041 ;;		 -> sendDataBuff(20), 
  1042 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  1043 ;;		 -> STR_5(7), STR_4(14), STR_3(12), STR_2(10), 
  1044 ;;		 -> STR_1(9), 
  1045 ;;  d               1    5[BANK0 ] PTR unsigned char 
  1046 ;;		 -> sendDataBuff(20), 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      PTR void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1056 ;;      Params:         0       3       0       0
  1057 ;;      Locals:         0       3       0       0
  1058 ;;      Temps:          0       1       0       0
  1059 ;;      Totals:         0       7       0       0
  1060 ;;Total ram usage:        7 bytes
  1061 ;; Hardware stack levels used:    2
  1062 ;; Hardware stack levels required when called:    1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_sendDataHandler
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _memcpy
  1072  0173                     _memcpy:	
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+pclath]
  1076                           ;memcpy@d1 stored from wreg
  1077  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0175  00BD               	movwf	memcpy@d1
  1080  0176  0839               	movf	memcpy@s1,w
  1081  0177  00BC               	movwf	??_memcpy
  1082  0178  083C               	movf	??_memcpy,w
  1083  0179  00BF               	movwf	memcpy@s
  1084  017A  083D               	movf	memcpy@d1,w
  1085  017B  00BC               	movwf	??_memcpy
  1086  017C  083C               	movf	??_memcpy,w
  1087  017D  00BE               	movwf	memcpy@d
  1088  017E                     l978:	
  1089  017E  3001               	movlw	1
  1090  017F  02BA               	subwf	memcpy@n,f
  1091  0180  3000               	movlw	0
  1092  0181  1C03               	skipc
  1093  0182  03BB               	decf	memcpy@n+1,f
  1094  0183  02BB               	subwf	memcpy@n+1,f
  1095  0184  30FF               	movlw	255
  1096  0185  063B               	xorwf	memcpy@n+1,w
  1097  0186  1D03               	skipz
  1098  0187  298A               	goto	u205
  1099  0188  30FF               	movlw	255
  1100  0189  063A               	xorwf	memcpy@n,w
  1101  018A                     u205:	
  1102  018A  1903               	btfsc	3,2
  1103  018B  0008               	return
  1104  018C  083F               	movf	memcpy@s,w
  1105  018D  0084               	movwf	4
  1106  018E  118A  2100  118A   	fcall	stringdir
  1107  0191  00BC               	movwf	??_memcpy
  1108  0192  083E               	movf	memcpy@d,w
  1109  0193  0084               	movwf	4
  1110  0194  083C               	movf	??_memcpy,w
  1111  0195  1383               	bcf	3,7	;select IRP bank0
  1112  0196  0080               	movwf	0
  1113  0197  3001               	movlw	1
  1114  0198  00BC               	movwf	??_memcpy
  1115  0199  083C               	movf	??_memcpy,w
  1116  019A  07BF               	addwf	memcpy@s,f
  1117  019B  3001               	movlw	1
  1118  019C  00BC               	movwf	??_memcpy
  1119  019D  083C               	movf	??_memcpy,w
  1120  019E  07BE               	addwf	memcpy@d,f
  1121  019F  297E               	goto	l978
  1122  01A0                     __end_of_memcpy:	
  1123                           ;	Return value of _memcpy is never used
  1124                           
  1125                           
  1126                           	psect	text5
  1127  013A                     __ptext5:	
  1128 ;; *************** function _device_init *****************
  1129 ;; Defined at:
  1130 ;;		line 5 in file "device_init.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;		None               void
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1144 ;;      Params:         0       0       0       0
  1145 ;;      Locals:         0       0       0       0
  1146 ;;      Temps:          0       0       0       0
  1147 ;;      Totals:         0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_receive_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _device_init
  1160  013A                     _device_init:	
  1161                           
  1162                           ;device_init.c: 6: CMCON = 0b00000111 ;
  1163                           
  1164                           ;incstack = 0
  1165                           ; Regs used in _device_init: [wreg+status,2]
  1166  013A  3007               	movlw	7
  1167  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1168  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1169  013D  009F               	movwf	31	;volatile
  1170                           
  1171                           ;device_init.c: 7: VRCON = 0b00000000 ;
  1172  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1173  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0140  019F               	clrf	31	;volatile
  1175                           
  1176                           ;device_init.c: 8: PORTA = 0 ;
  1177  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0143  0185               	clrf	5	;volatile
  1180                           
  1181                           ;device_init.c: 9: PORTB = 0 ;
  1182  0144  0186               	clrf	6	;volatile
  1183                           
  1184                           ;device_init.c: 10: TRISA = 0b00100000 ;
  1185  0145  3020               	movlw	32
  1186  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0148  0085               	movwf	5	;volatile
  1189                           
  1190                           ;device_init.c: 11: TRISB = 0b00000110 ;
  1191  0149  3006               	movlw	6
  1192  014A  0086               	movwf	6	;volatile
  1193                           
  1194                           ;device_init.c: 13: TXSTA = 0b00100100 ;
  1195  014B  3024               	movlw	36
  1196  014C  0098               	movwf	24	;volatile
  1197                           
  1198                           ;device_init.c: 34: RCSTA = 0b10010000 ;
  1199  014D  3090               	movlw	144
  1200  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1201  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0150  0098               	movwf	24	;volatile
  1203                           
  1204                           ;device_init.c: 35: SPBRG = 0x19 ;
  1205  0151  3019               	movlw	25
  1206  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1208  0154  0099               	movwf	25	;volatile
  1209                           
  1210                           ;device_init.c: 66: CCP1M3 = 1;
  1211  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1212  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0157  1597               	bsf	23,3	;volatile
  1214                           
  1215                           ;device_init.c: 67: CCP1M2 = 1;
  1216  0158  1517               	bsf	23,2	;volatile
  1217                           
  1218                           ;device_init.c: 68: CCP1M1 = 0;
  1219  0159  1097               	bcf	23,1	;volatile
  1220                           
  1221                           ;device_init.c: 69: CCP1M0 = 0;
  1222  015A  1017               	bcf	23,0	;volatile
  1223                           
  1224                           ;device_init.c: 70: PR2 = 0xff;
  1225  015B  30FF               	movlw	255
  1226  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1227  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1228  015E  0092               	movwf	18	;volatile
  1229                           
  1230                           ;device_init.c: 72: CCPR1L = 0x64;
  1231  015F  3064               	movlw	100
  1232  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0162  0095               	movwf	21	;volatile
  1235                           
  1236                           ;device_init.c: 73: CCP1X = 0;
  1237  0163  1297               	bcf	23,5	;volatile
  1238                           
  1239                           ;device_init.c: 74: CCP1Y = 0;
  1240  0164  1217               	bcf	23,4	;volatile
  1241                           
  1242                           ;device_init.c: 75: TRISB3 = 0;
  1243  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1244  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1245  0167  1186               	bcf	6,3	;volatile
  1246                           
  1247                           ;device_init.c: 76: T2CON = 0b01111111;
  1248  0168  307F               	movlw	127
  1249  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1250  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1251  016B  0092               	movwf	18	;volatile
  1252                           
  1253                           ;device_init.c: 94: TXIE = 0;
  1254  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1255  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1256  016E  120C               	bcf	12,4	;volatile
  1257                           
  1258                           ;device_init.c: 95: RCIE = 1 ;
  1259  016F  168C               	bsf	12,5	;volatile
  1260                           
  1261                           ;device_init.c: 96: PEIE = 1 ;
  1262  0170  170B               	bsf	11,6	;volatile
  1263                           
  1264                           ;device_init.c: 97: GIE = 1 ;
  1265  0171  178B               	bsf	11,7	;volatile
  1266  0172  0008               	return
  1267  0173                     __end_of_device_init:	
  1268                           
  1269                           	psect	text6
  1270  00B4                     __ptext6:	
  1271 ;; *************** function _InterReceiver *****************
  1272 ;; Defined at:
  1273 ;;		line 26 in file "usart.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;		None               void
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1287 ;;      Params:         0       0       0       0
  1288 ;;      Locals:         0       0       0       0
  1289 ;;      Temps:          5       0       0       0
  1290 ;;      Totals:         5       0       0       0
  1291 ;;Total ram usage:        5 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		Interrupt level 1
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _InterReceiver
  1302  00B4                     _InterReceiver:	
  1303                           
  1304                           ;usart.c: 28: if (RCIF && RCIE) {
  1305  00B4  1E8C               	btfss	12,5	;volatile
  1306  00B5  28C4               	goto	i1l942
  1307  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1308  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  1309  00B8  1E8C               	btfss	12,5	;volatile
  1310  00B9  28C4               	goto	i1l942
  1311                           
  1312                           ;usart.c: 29: RCV_Buff = RCREG;
  1313  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1314  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1315  00BC  081A               	movf	26,w	;volatile
  1316  00BD  00F5               	movwf	??_InterReceiver
  1317  00BE  0875               	movf	??_InterReceiver,w
  1318  00BF  00A4               	movwf	_RCV_Buff	;volatile
  1319                           
  1320                           ;usart.c: 30: RxInd = 1;
  1321  00C0  3001               	movlw	1
  1322  00C1  00A0               	movwf	_RxInd	;volatile
  1323  00C2  3000               	movlw	0
  1324  00C3  00A1               	movwf	_RxInd+1	;volatile
  1325  00C4                     i1l942:	
  1326                           
  1327                           ;usart.c: 31: }
  1328                           ;usart.c: 32: if (TXIF && TXIE) {
  1329  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1330  00C5  1E0C               	btfss	12,4	;volatile
  1331  00C6  28EA               	goto	i1l75
  1332  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1333  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1334  00C9  1E0C               	btfss	12,4	;volatile
  1335  00CA  28EA               	goto	i1l75
  1336                           
  1337                           ;usart.c: 33: if (sendDataLen == 0) {
  1338  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1339  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1340  00CD  0823               	movf	_sendDataLen+1,w	;volatile
  1341  00CE  0422               	iorwf	_sendDataLen,w	;volatile
  1342  00CF  1D03               	skipz
  1343  00D0  28D7               	goto	i1l954
  1344                           
  1345                           ;usart.c: 34: i = 0;
  1346  00D1  01F2               	clrf	_i
  1347  00D2  01F3               	clrf	_i+1
  1348                           
  1349                           ;usart.c: 35: TXIE = 0;
  1350  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1351  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1352  00D5  120C               	bcf	12,4	;volatile
  1353                           
  1354                           ;usart.c: 36: return;
  1355  00D6  28EA               	goto	i1l75
  1356  00D7                     i1l954:	
  1357                           
  1358                           ;usart.c: 37: }
  1359                           ;usart.c: 38: TXREG = sendDataBuff[i++];
  1360  00D7  0872               	movf	_i,w
  1361  00D8  3E25               	addlw	_sendDataBuff& (0+255)
  1362  00D9  0084               	movwf	4
  1363  00DA  1383               	bcf	3,7	;select IRP bank0
  1364  00DB  0800               	movf	0,w
  1365  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00DD  0099               	movwf	25	;volatile
  1367  00DE  3001               	movlw	1
  1368  00DF  07F2               	addwf	_i,f
  1369  00E0  1803               	skipnc
  1370  00E1  0AF3               	incf	_i+1,f
  1371  00E2  3000               	movlw	0
  1372  00E3  07F3               	addwf	_i+1,f
  1373                           
  1374                           ;usart.c: 39: --sendDataLen;
  1375  00E4  30FF               	movlw	255
  1376  00E5  07A2               	addwf	_sendDataLen,f	;volatile
  1377  00E6  1803               	skipnc
  1378  00E7  0AA3               	incf	_sendDataLen+1,f	;volatile
  1379  00E8  30FF               	movlw	255
  1380  00E9  07A3               	addwf	_sendDataLen+1,f	;volatile
  1381  00EA                     i1l75:	
  1382  00EA  0879               	movf	??_InterReceiver+4,w
  1383  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1384  00EC  00FF               	movwf	127
  1385  00ED  0878               	movf	??_InterReceiver+3,w
  1386  00EE  008A               	movwf	10
  1387  00EF  0877               	movf	??_InterReceiver+2,w
  1388  00F0  0084               	movwf	4
  1389  00F1  0E76               	swapf	(??_InterReceiver+1)^(0+-128),w
  1390  00F2  0083               	movwf	3
  1391  00F3  0EFE               	swapf	126,f
  1392  00F4  0E7E               	swapf	126,w
  1393  00F5  0009               	retfie
  1394  00F6                     __end_of_InterReceiver:	
  1395  007E                     btemp	set	126	;btemp
  1396  007E                     wtemp	set	126
  1397  007E                     wtemp0	set	126
  1398  0080                     wtemp1	set	128
  1399  0082                     wtemp2	set	130
  1400  0084                     wtemp3	set	132
  1401  0086                     wtemp4	set	134
  1402  0088                     wtemp5	set	136
  1403  007F                     wtemp6	set	127
  1404  007E                     ttemp	set	126
  1405  007E                     ttemp0	set	126
  1406  0081                     ttemp1	set	129
  1407  0084                     ttemp2	set	132
  1408  0087                     ttemp3	set	135
  1409  007F                     ttemp4	set	127
  1410  007E                     ltemp	set	126
  1411  007E                     ltemp0	set	126
  1412  0082                     ltemp1	set	130
  1413  0086                     ltemp2	set	134
  1414  0080                     ltemp3	set	128
  1415                           
  1416                           	psect	intentry
  1417  0004                     __pintentry:	
  1418                           ;incstack = 0
  1419                           ; Regs used in _InterReceiver: [wreg-fsr0h+status,2+status,0]
  1420                           
  1421  0004                     interrupt_function:	
  1422  007E                     saved_w	set	btemp
  1423  0004  00FE               	movwf	btemp
  1424  0005  0E03               	swapf	3,w
  1425  0006  00F6               	movwf	??_InterReceiver+1
  1426  0007  0804               	movf	4,w
  1427  0008  00F7               	movwf	??_InterReceiver+2
  1428  0009  080A               	movf	10,w
  1429  000A  00F8               	movwf	??_InterReceiver+3
  1430  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1431  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1432  000D  087F               	movf	btemp+1,w
  1433  000E  00F9               	movwf	??_InterReceiver+4
  1434  000F  118A  28B4         	ljmp	_InterReceiver


Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     21      46
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[12]), STR_2(CODE[10]), 
		 -> STR_1(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[12]), STR_2(CODE[10]), 
		 -> STR_1(CODE[9]), 

    memcpy@d1	PTR void  size(1) Largest target is 20
		 -> sendDataBuff(BANK0[20]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 20
		 -> sendDataBuff(BANK0[20]), 

    memcpy@s1	PTR const void  size(1) Largest target is 14
		 -> STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[12]), STR_2(CODE[10]), 
		 -> STR_1(CODE[9]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[12]), STR_2(CODE[10]), 
		 -> STR_1(CODE[9]), 

    sp__memcpy	PTR void  size(1) Largest target is 20
		 -> sendDataBuff(BANK0[20]), 

    sendDataHandler@ptr	PTR volatile unsigned char  size(1) Largest target is 20
		 -> sendDataBuff(BANK0[20]), 

    sendDataHandler@msg	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[7]), STR_4(CODE[14]), STR_3(CODE[12]), STR_2(CODE[10]), 
		 -> STR_1(CODE[9]), 

    receive_main@stop	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[7]), 

    receive_main@down	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_4(CODE[14]), 

    receive_main@up	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[12]), 

    receive_main@backward	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    receive_main@forward	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _InterReceiver in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_receive_main
    _receive_main->_sendDataHandler
    _sendDataHandler->_strlen

Critical Paths under _InterReceiver in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterReceiver in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterReceiver in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1297
                       _receive_main
 ---------------------------------------------------------------------------------
 (1) _receive_main                                         8     8      0    1297
                                             13 BANK0      8     8      0
                        _device_init
                    _sendDataHandler
 ---------------------------------------------------------------------------------
 (2) _sendDataHandler                                      5     4      1    1127
                                              8 BANK0      5     4      1
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     160
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     334
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _device_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterReceiver                                        5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _receive_main
     _device_init
     _sendDataHandler
       _memcpy
       _strlen

 _InterReceiver (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     15      2E       3       57.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      38       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      38      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Jan 18 08:29:34 2015

                           _i 0072                             pc 0002                   __CFG_CP$OFF 0000  
                          fsr 0004                           l964 01D2                           l966 01DF  
                         l978 017E                           _GIE 005F                           _RB0 0030  
                         _RB5 0035                           u205 018A                           u237 0091  
                         _PR2 0092                  __CFG_CPD$OFF 0000                           _cnt 0074  
                         fsr0 0004                           indf 0000                  __CFG_LVP$OFF 0000  
                        l1060 004B                          l1052 003B                          l1080 007C  
                        l1048 009B                          l1074 006C                          l1092 009A  
                        l1068 005A                          STR_1 012A                          STR_2 0120  
                        STR_3 0114                          STR_4 0106                          STR_5 0133  
                        _PEIE 005E                          _RCIE 0465                          _RCIF 0065  
                        _PCON 008E                          i1l75 00EA                          _TXIE 0464  
                        _TXIF 0064                          _main 01F5                          btemp 007E  
                        ltemp 007E                          start 0011                          ttemp 007E  
                        wtemp 007E                         ?_main 0075       __end_of_sendDataHandler 01CB  
                       _CCP1X 00BD                         _CCP1Y 00BC                 __CFG_WDTE$OFF 0000  
sendDataHandler@SendDataBytes 0043                         _CMCON 001F                         _T2CON 0012  
                       i1l942 00C4                         i1l954 00D7                         _RCREG 001A  
                       _RCSTA 0018                         _SPBRG 0099                         _PORTA 0005  
                       _PORTB 0006                         _TRISA 0085                         _TRISB 0086  
                       _VRCON 009F                         _TXREG 0019                         _TXSTA 0098  
                       _RxInd 0020                         _TxReq 0070                __CFG_BOREN$OFF 0000  
                       pclath 000A                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080                         ttemp0 007E  
                       ttemp1 0081                         ttemp2 0084                         ttemp3 0087  
                       ttemp4 007F                         status 0003                         wtemp0 007E  
                       wtemp1 0080                         wtemp2 0082                         wtemp3 0084  
                       wtemp4 0086                         wtemp5 0088                         wtemp6 007F  
      __size_of_InterReceiver 0042                __CFG_MCLRE$OFF 0000               __initialization 0013  
                __end_of_main 0205                        ??_main 004E            sendDataHandler@msg 0041  
          sendDataHandler@ptr 0045          __size_of_device_init 0039                        _CCP1M0 00B8  
                      _CCP1M1 00B9                        _CCP1M2 00BA                        _CCP1M3 00BB  
                      _CCPR1L 0015                        _TRISB0 0430                        _TRISB3 0433  
              __CFG_PWRTE$OFF 0000              receive_main@down 004C              receive_main@stop 004D  
                      _memcpy 0173                 _InterReceiver 00B4                        _strlen 01CB  
            ?_sendDataHandler 0041          receive_main@backward 004A                        saved_w 007E  
     __end_of__initialization 001E                 ?_receive_main 0075                __pcstackCOMMON 0075  
              ?_InterReceiver 0075                receive_main@up 004B                    __pbssBANK0 0020  
              ??_receive_main 0046                    __pmaintext 01F5                    __pintentry 0004  
                     ?_memcpy 0039                       ?_strlen 0039                    __stringtab 0100  
             ??_InterReceiver 0075               __size_of_memcpy 002D                       __ptext1 0021  
                     __ptext2 01A0                       __ptext3 01CB                       __ptext4 0173  
                     __ptext5 013A                       __ptext6 00B4               __size_of_strlen 002A  
                     clrloop0 0206          end_of_initialization 001E                       memcpy@d 003E  
                     memcpy@n 003A                       memcpy@s 003F                       strlen@s 003F  
        __end_of_receive_main 00B4                 ??_device_init 0039                __end_of_memcpy 01A0  
              __end_of_strlen 01F5           start_initialization 0013      __size_of_sendDataHandler 002B  
         __end_of_device_init 0173                      ??_memcpy 003C                      ??_strlen 003B  
         receive_main@forward 0049                   __pbssCOMMON 0070                     ___latbits 0001  
               __pcstackBANK0 0039           __end_of__stringdata 013A         __size_of_receive_main 0093  
                   __pstrings 0100                   _device_init 013A             interrupt_function 0004  
                _receive_main 0021                     clear_ram0 0205             ??_sendDataHandler 0042  
                    _RCV_Buff 0024                  _sendDataBuff 0025         __end_of_InterReceiver 00F6  
                 __stringbase 0105                   __stringdata 0106            __end_of__stringtab 0106  
               __size_of_main 0010                   _sendDataLen 0022                      memcpy@d1 003D  
                    memcpy@s1 0039                      intlevel1 0000                     stringcode 0100  
                    strlen@cp 0040                  ?_device_init 0075                      stringdir 0100  
                    stringtab 0100               _sendDataHandler 01A0            __CFG_FOSC$INTOSCIO 0000  
